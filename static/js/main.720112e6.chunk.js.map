{"version":3,"sources":["api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/TodoPage.tsx","components/PageNavLink.tsx","components/Loader/Loader.tsx","components/MessageBlock.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","persone","to","slug","className","classNames","sex","name","PeopleTable","peopleTable","slugPersone","isActive","map","born","died","mother","motherName","father","fatherName","TodoPage","useParams","PageNavLink","text","end","Loader","MessageBlock","isLoading","isError","length","App","useState","setPeopleTable","setIsError","setIsLoading","useEffect","fetchData","peopleFromServer","find","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.720112e6.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  persone: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ persone }) => (\n  <Link\n    to={`/people/${persone.slug}`}\n    className={classNames(\n      {\n        'has-text-danger': persone.sex === 'f',\n      },\n    )}\n  >\n    {persone.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  peopleTable: Person[],\n  slugPersone: string | null,\n}\n\nexport const PeopleTable: React.FC<Props> = ({\n  peopleTable,\n  slugPersone,\n}) => {\n  const isActive = (persone: Person) => persone.slug === slugPersone;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleTable.map(persone => (\n          <>\n            <tr\n              data-cy=\"person\"\n              key={persone.slug}\n              className={classNames({\n                'has-background-warning': isActive(persone),\n              })}\n            >\n              <td>\n                <PersonLink persone={persone} />\n              </td>\n\n              <td>{persone.sex}</td>\n              <td>{persone.born}</td>\n              <td>{persone.died}</td>\n\n              <td>\n                {persone.mother ? (\n                  <PersonLink persone={persone.mother} />\n                ) : (\n                  persone.motherName || '-'\n                )}\n              </td>\n\n              <td>\n                {persone.father ? (\n                  <PersonLink persone={persone.father} />\n                ) : (\n                  persone.fatherName || '-'\n                )}\n              </td>\n            </tr>\n          </>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PeopleTable } from './PeopleTable';\n\ninterface Props {\n  peopleTable: Person[],\n}\nexport const TodoPage: React.FC<Props> = ({ peopleTable }) => {\n  const { slug = null } = useParams();\n\n  return (\n    (\n      <>\n        <h1 className=\"title\">People Page</h1>\n        <PeopleTable\n          peopleTable={peopleTable}\n          slugPersone={slug}\n        />\n      </>\n    )\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string,\n  text: string,\n  end?: boolean,\n}\nexport const PageNavLink: React.FC<Props> = ({ to, text, end = false }) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n    to={to}\n    end={end}\n  >\n    {text}\n  </NavLink>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\nimport { Loader } from './Loader';\n\ninterface Props {\n  isLoading: boolean,\n  isError: boolean,\n  peopleTable: Person[]\n}\n\nexport const MessageBlock: React.FC<Props> = ({\n  isLoading,\n  isError,\n  peopleTable,\n}) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && (<Loader />)}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {!isError && !isLoading && peopleTable.length === 0 && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { getPeople } from './api';\nimport { Person } from './types';\nimport { TodoPage } from './components/TodoPage';\nimport { PageNavLink } from './components/PageNavLink';\nimport { MessageBlock } from './components/MessageBlock';\n\nexport const App = () => {\n  const [peopleTable, setPeopleTable] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const peopleFromServer = await getPeople();\n\n        setPeopleTable(peopleFromServer.map(persone => {\n          return ({\n            ...persone,\n            mother: peopleFromServer\n              .find(mother => persone.motherName === mother.name),\n\n            father: peopleFromServer\n              .find(father => persone.fatherName === father.name),\n          });\n        }));\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink\n              to=\"/\"\n              text=\"Home\"\n              end\n            />\n            <PageNavLink\n              to=\"/people\"\n              text=\"People\"\n            />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            >\n              <Route\n                path=\"home\"\n                element={<Navigate to=\"/\" replace />}\n              />\n            </Route>\n\n            <Route path=\"/people\">\n              <Route index element={<TodoPage peopleTable={peopleTable} />} />\n              <Route\n                path=\":slug\"\n                element={<TodoPage peopleTable={peopleTable} />}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n\n          {\n            (isError || isLoading)\n            && (\n              <MessageBlock\n                isError={isError}\n                isLoading={isLoading}\n                peopleTable={peopleTable}\n              />\n            )\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}